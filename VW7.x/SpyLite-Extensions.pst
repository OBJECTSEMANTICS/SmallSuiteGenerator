<?xml version="1.0"?><st-source><!-- Name: SpyLite-ExtensionsBundleName: SpyLite-ExtensionsBundleStructure: a Store.BundleForParcelParcel: #('SpyLite-Extensions' )ParcelName: SpyLite-ExtensionsPrerequisiteParcels: #(#('SpyLite-Tests' '' ) )Date: 11:50:36 pm September 23, 2020 --><time-stamp>From VisualWorksÂ®, 7.4 of December 5, 2005 on September 23, 2020 at 11:50:36 pm</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><methods><class-id>Core.Object</class-id> <category>testing</category><body package="SpyLite-Extensions" selector="containUncleanedBlocks">containUncleanedBlocks	| semaphore process result timeOut |	result := self isUncleanedBlock.	semaphore := Semaphore new.	process := [ 	[ 	1 to: self class instSize do: 		[ :i | result := result or: [(self instVarAt: i) isUncleanedBlock ] ].	1 to: self basicSize do: 		[ :i | result := result or: [ (self basicAt: i) isUncleanedBlock ] ].	semaphore signal.	] on: Error	do: [ semaphore signal ]] fork.	timeOut := semaphore waitTimeoutMSecs: 1000.	timeOut ifTrue: [ 		process terminate.		self halt. ].	^ result</body><body package="SpyLite-Extensions" selector="depthIsLowerThan:">depthIsLowerThan: aNumber	| semaphore process result timeOut |	result := false.	semaphore := Semaphore new.	process := [		[			result := self objectDepth &lt; aNumber.			semaphore signal.		] on: Error do: [ semaphore signal ] ] fork.	timeOut := semaphore waitTimeoutMSecs: 1000.	timeOut ifTrue: [		process terminate ].	^ result.</body><body package="SpyLite-Extensions" selector="isASimpleObject">isASimpleObject	^ self depthIsLowerThan: 10</body><body package="SpyLite-Extensions" selector="isClean">isClean	^ false</body><body package="SpyLite-Extensions" selector="isUncleanedBlock">isUncleanedBlock	^ (self isBlock and: [self isClean not])</body><body package="SpyLite-Extensions" selector="objectDepth">objectDepth	| result instVarsDepth |	result := 1.	instVarsDepth := (1 to: self class instSize) collect: [ :i | (self instVarAt: i) objectDepth ].	instVarsDepth := instVarsDepth asOrderedCollection addAll: ((1 to: self basicSize) collect: [ :i | (self basicAt: i) objectDepth ]); yourself.	instVarsDepth ifNotEmpty: [ result := result + instVarsDepth max ].	^ result</body></methods><methods><class-id>Spy1.SLProfilerCoverage</class-id> <category>as yet unclassified</category><body package="SpyLite-Extensions" selector="calculateExecutedMethodsByClass">calculateExecutedMethodsByClass	^(self allClassesAsDictionary keys collect: [:t1 | t1 -&gt; (self calculateExecutedStatementsOf: t1)]		thenSelect: [:t2 | t2 value second &gt; 0]) asDictionary</body><body package="SpyLite-Extensions" selector="calculateExecutedStatementsByClass">calculateExecutedStatementsByClass	^(self allClassesAsDictionary keys collect: [:t1 | t1 -&gt; (self calculateExecutedStatementsOf: t1)]		thenSelect: [:t2 | t2 value second &gt; 0]) asDictionary</body><body package="SpyLite-Extensions" selector="calculateExecutedStatesByClassFor:">calculateExecutedStatesByClassFor: t1 	^(self allClassesAsDictionary keys collect: [:t2 | t2 -&gt; (self calculateExecutedStatesOf: t2 for: t1)]		thenSelect: [:t3 | t3 value second &gt; 0]) asDictionary</body><body package="SpyLite-Extensions" selector="calculateExecutedStatesOf:for:">calculateExecutedStatesOf: t1 for: t2 	| t3 t4 t5 |	[t3 := (t4 := t2 fsmStateSpecs collect: [:t6 | t6 actionBlock method at: 1]) size]		on: Error do: [^0].	t5 := (self classAt: t1) allMethods.	^Array with: t3 with: (self numberOfExecutedStatesIn: t5 for: t4)</body><body package="SpyLite-Extensions" selector="numberOfExecutedStatesIn:">numberOfExecutedStatesIn: t1 	^self numberOfExecutedStatesIn: self allMethods for: t1</body><body package="SpyLite-Extensions" selector="numberOfExecutedStatesIn:for:">numberOfExecutedStatesIn: t1 for: t2 	^(t1 select: [:t3 | t2 includesValue: t3 selector])		inject: 0 into: [:t4 :t5 | t4 + t5 isExecuted]</body></methods><methods><class-id>Spy1.SLProfilerCoverage</class-id> <category>public-profiling</category><body package="SpyLite-Extensions" selector="profile:inPackages:">profile: t1 inPackages: t2 	Transcript show: 'profiling...'; cr.		[self beforeProfiling.	self gatherForPackages: t2.	self install.	self beforeProfiling.	t1 value.	self afterProfiling]		ensure: [self uninstall].	Transcript show: 'ended...'; cr.	self setIfNecessaryTimeProfiler: t1.	self setIfNecessaryTimeAndCallGraphFrom: t1.	self setIfNecessaryStateChanges.	self checkInvariant.	^self</body></methods><methods><class-id>Spy1.SLProfilerCoverage</class-id> <category>as yet unclassified</category><body package="SpyLite-Extensions" selector="stateCoverage1For:">stateCoverage1For: t1	| t2 t3 |	[t2 := (t3 := t1 fsmStateSpecs collect: [:t4 | t4 actionBlock method at: 1]) size]		on: Error do: [^0].	t2 == 0 ifTrue: [^0].	^(100 * (self numberOfExecutedStatesIn: t3) / t2) asFloat round: 3</body><body package="SpyLite-Extensions" selector="stateCoverageFor:">stateCoverageFor: t1	| t2 t3 |	[t2 := (t3 := t1 fsmStateSpecs collect: [:t4 | t4 actionBlock method at: 1]) size]		on: Error do: [^0].	t2 == 0 ifTrue: [^0].	^(100 * (self numberOfExecutedStatesIn: t3) / t2) asFloat round: 3</body></methods><methods><class-id>Spy1.SLProfilerCoverageTest</class-id> <category>accessing</category><body package="SpyLite-Extensions" selector="assertMethodCoverageOf:on:equals:">assertMethodCoverageOf: t1 on: t2 equals: t3 	| t4 value |	t4 := t1 methodCoverage1.	t4 size = 0		ifTrue: [ value := 0 ]		ifFalse: [ value := (t4 at: t2) ].	self assert: value		equals: t3.	^self</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>Number</name><environment>Core</environment><super>Core.ArithmeticValue</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Magnitude-Numbers</category><attributes><package>Magnitude-Numbers</package></attributes></class><class><name>Integer</name><environment>Core</environment><super>Core.Number</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Magnitude-Numbers</category><attributes><package>Magnitude-Numbers</package></attributes></class><class><name>CompiledMethod</name><environment>Kernel</environment><super>Kernel.CompiledMainBlock</super><private>false</private><indexed-type>objects</indexed-type><inst-vars>mclass sourceCode </inst-vars><class-inst-vars></class-inst-vars><imports>			private Kernel.OpcodePool.*			</imports><category>Kernel-Methods</category><attributes><package>Kernel-Methods</package></attributes></class><class><name>Behavior</name><environment>Core</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>superclass methodDict format subclasses </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Classes</category><attributes><package>Kernel-Classes</package></attributes></class><class><name>SLCollectorLiteral</name><environment>Spy1</environment><super>Refactory.Browser.RBProgramNodeVisitor</super><private>false</private><indexed-type>none</indexed-type><inst-vars>literals </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-Coverage</category><attributes><package>SpyLite</package></attributes></class><class><name>BlockClosure</name><environment>Kernel</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>method outerContext copiedValues </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Methods</category><attributes><package>Kernel-Methods</package></attributes></class><class><name>Collection</name><environment>Core</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Abstract</category><attributes><package>Collections-Abstract</package></attributes></class><class><name>SequenceableCollection</name><environment>Core</environment><super>Core.Collection</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Abstract</category><attributes><package>Collections-Abstract</package></attributes></class><class><name>CharacterArray</name><environment>Core</environment><super>Core.ArrayedCollection</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Text</category><attributes><package>Collections-Text</package></attributes></class><class><name>ClassDescription</name><environment>Core</environment><super>Core.Behavior</super><private>false</private><indexed-type>none</indexed-type><inst-vars>instanceVariables organization </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Classes</category><attributes><package>Kernel-Classes</package></attributes></class><class><name>Class</name><environment>Core</environment><super>Core.ClassDescription</super><private>false</private><indexed-type>none</indexed-type><inst-vars>name classPool environment </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Classes</category><attributes><package>Kernel-Classes</package></attributes></class><class><name>LimitedPrecisionReal</name><environment>Core</environment><super>Core.Number</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Magnitude-Numbers</category><attributes><package>Magnitude-Numbers</package></attributes></class><class><name>Metaclass</name><environment>Core</environment><super>Core.ClassDescription</super><private>false</private><indexed-type>none</indexed-type><inst-vars>thisClass </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Classes</category><attributes><package>Kernel-Classes</package></attributes></class><class><name>String</name><environment>Core</environment><super>Core.CharacterArray</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Text</category><attributes><package>Collections-Text</package></attributes></class><class><name>SLInstrumentor</name><environment>Spy1</environment><super>Refactory.Browser.RBProgramNodeVisitor</super><private>false</private><indexed-type>none</indexed-type><inst-vars>blocks currentId </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-Coverage</category><attributes><package>SpyLite</package></attributes></class><class><name>Set</name><environment>Core</environment><super>Core.Collection</super><private>false</private><indexed-type>objects</indexed-type><inst-vars>tally </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Unordered</category><attributes><package>Collections-Unordered</package></attributes></class><class><name>Character</name><environment>Core</environment><super>Core.Magnitude</super><private>false</private><indexed-type>immediate</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Magnitude-General</category><attributes><package>Magnitude-General</package></attributes></class><class><name>Dictionary</name><environment>Core</environment><super>Core.Set</super><private>false</private><indexed-type>objects</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Unordered</category><attributes><package>Collections-Unordered</package></attributes></class><class><name>Symbol</name><environment>Core</environment><super>Core.String</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Text</category><attributes><package>Collections-Text</package></attributes></class><class><name>Double</name><environment>Core</environment><super>Core.LimitedPrecisionReal</super><private>false</private><indexed-type>bytes</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Magnitude-Numbers</category><attributes><package>Magnitude-Numbers</package></attributes></class><class><name>RBProgramNode</name><environment>Refactory.Browser</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>parent comments </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Parser</category><attributes><package>Browser-Parser</package></attributes></class><class><name>RBMethodNode</name><environment>Refactory.Browser</environment><super>Refactory.Browser.RBProgramNode</super><private>false</private><indexed-type>none</indexed-type><inst-vars>selector selectorParts body source arguments tags replacements nodeReplacements </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Parser</category><attributes><package>Browser-Parser</package></attributes></class><class><name>Fraction</name><environment>Core</environment><super>Core.Number</super><private>false</private><indexed-type>none</indexed-type><inst-vars>numerator denominator </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Magnitude-Numbers</category><attributes><package>Magnitude-Numbers</package></attributes></class><class><name>Float</name><environment>Core</environment><super>Core.LimitedPrecisionReal</super><private>false</private><indexed-type>bytes</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Magnitude-Numbers</category><attributes><package>Magnitude-Numbers</package></attributes></class><class><name>TestCase</name><environment>SUnit</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>testSelector </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SUnit</category><attributes><package>SUnitToo</package></attributes></class><class><name>SLProfilerCoverageTest</name><environment>Spy1</environment><super>SUnit.TestCase</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-Tests</category><attributes><package>SpyLite-Tests</package></attributes></class><class><name>SpyLite</name><environment>Spy1</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars>currentTestCase currentTestMethod </class-inst-vars><imports></imports><category>Spy-Core</category><attributes><package>SpyLite</package></attributes></class><class><name>SLProfiler</name><environment>Spy1</environment><super>Spy1.SpyLite</super><private>false</private><indexed-type>none</indexed-type><inst-vars>packages allClassesAsDictionaryCache allMethodsCache afterBlock </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Spy-Core</category><attributes><package>SpyLite</package></attributes></class><class><name>SLMethod</name><environment>Spy1</environment><super>Spy1.SpyLite</super><private>false</private><indexed-type>none</indexed-type><inst-vars>instrumentedMethod originalMethod selector classSpy spywrapper </inst-vars><class-inst-vars>inMeta </class-inst-vars><imports></imports><category>Spy-Core</category><attributes><package>SpyLite</package></attributes></class><class><name>SLMethodCoverage</name><environment>Spy1</environment><super>Spy1.SLMethod</super><private>false</private><indexed-type>none</indexed-type><inst-vars>blocks probedMethod </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-Coverage</category><attributes><package>SpyLite</package></attributes></class><class><name>SSTypeCollectorMethod</name><environment>Spy1</environment><super>Spy1.SLMethod</super><private>false</private><indexed-type>none</indexed-type><inst-vars>returnType argTypes receiverType executed literals numberOfExecutions </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-TypeCollector</category><attributes><package>SpyLite</package></attributes></class><class><name>SLProfilerCoverage</name><environment>Spy1</environment><super>Spy1.SLProfiler</super><private>false</private><indexed-type>none</indexed-type><inst-vars>typeInfo </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-Coverage</category><attributes><package>SpyLite</package></attributes></class><class><name>SLClass</name><environment>Spy1</environment><super>Spy1.SpyLite</super><private>false</private><indexed-type>none</indexed-type><inst-vars>methods className allSubclassesCache packageSpy metaclassSpy originalClass </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Spy-Core</category><attributes><package>SpyLite</package></attributes></class><class><name>WriteStream</name><environment>Core</environment><super>Core.InternalStream</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Streams</category><attributes><package>Collections-Streams</package></attributes></class></st-source>