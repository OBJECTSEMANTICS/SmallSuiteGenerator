<?xml version="1.0"?><st-source><!-- Name: SpyLiteBundleName: SpyLiteBundleStructure: a Store.BundleForParcelParcel: #('SpyLite' )ParcelName: SpyLiteDate: 7:06:57 am July 24, 2020 --><time-stamp>From VisualWorksÂ®, 7.4 of December 5, 2005 on July 24, 2020 at 7:06:57 am</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><name-space><name>Spy1</name><environment>Smalltalk</environment><private>false</private><imports>			private Smalltalk.*			</imports><category>Spy1</category><attributes><package>SpyLite</package></attributes></name-space><class><name>SLInstrumentor</name><environment>Spy1</environment><super>Refactory.Browser.RBProgramNodeVisitor</super><private>false</private><indexed-type>none</indexed-type><inst-vars>blocks currentId </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-Coverage</category><attributes><package>SpyLite</package></attributes></class><class><name>SLCollectorLiteral</name><environment>Spy1</environment><super>Refactory.Browser.RBProgramNodeVisitor</super><private>false</private><indexed-type>none</indexed-type><inst-vars>literals </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-Coverage</category><attributes><package>SpyLite</package></attributes></class><comment><class-id>Spy1.SLCollectorLiteral</class-id><body>Missing comment</body></comment><class><name>SLCodeProbe</name><environment>Spy1</environment><super>CraftedSmalltalk.CodeProbe</super><private>false</private><indexed-type>none</indexed-type><inst-vars>block </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>SpyLite</package></attributes></class><class><name>SpyLite</name><environment>Spy1</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars>currentTestCase currentTestMethod </class-inst-vars><imports></imports><category>Spy-Core</category><attributes><package>SpyLite</package></attributes></class><comment><class-id>Spy1.SpyLite</class-id><body>Missing comment</body></comment><class><name>SLPackage</name><environment>Spy1</environment><super>Spy1.SpyLite</super><private>false</private><indexed-type>none</indexed-type><inst-vars>packageName classes profiler </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Spy-Core</category><attributes><package>SpyLite</package></attributes></class><comment><class-id>Spy1.SLPackage</class-id><body>Missing comment</body></comment><class><name>SLSummaryStatement</name><environment>Smalltalk</environment><super>Spy1.SpyLite</super><private>false</private><indexed-type>none</indexed-type><inst-vars>code executed </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-Utility</category><attributes><package>SpyLite</package></attributes></class><class><name>SLSummaryExecutionMethod</name><environment>Smalltalk</environment><super>Spy1.SpyLite</super><private>false</private><indexed-type>none</indexed-type><inst-vars>executorClass selector executed code summaryStatements isClassSide hasProfiler returnType argsTypes </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-Utility</category><attributes><package>SpyLite</package></attributes></class><class><name>SLClass</name><environment>Spy1</environment><super>Spy1.SpyLite</super><private>false</private><indexed-type>none</indexed-type><inst-vars>methods className allSubclassesCache packageSpy metaclassSpy originalClass </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Spy-Core</category><attributes><package>SpyLite</package></attributes></class><comment><class-id>Spy1.SLClass</class-id><body>Missing comment</body></comment><class><name>SLMethod</name><environment>Spy1</environment><super>Spy1.SpyLite</super><private>false</private><indexed-type>none</indexed-type><inst-vars>instrumentedMethod originalMethod selector classSpy spywrapper </inst-vars><class-inst-vars>inMeta </class-inst-vars><imports></imports><category>Spy-Core</category><attributes><package>SpyLite</package></attributes></class><comment><class-id>Spy1.SLMethod</class-id><body>Missing comment</body></comment><class><name>SSTypeCollectorPackage</name><environment>Spy1</environment><super>Spy1.SLPackage</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-TypeCollector</category><attributes><package>SpyLite</package></attributes></class><comment><class-id>Spy1.SSTypeCollectorPackage</class-id><body>Missing comment</body></comment><class><name>SSTypeCollectorMethod</name><environment>Spy1</environment><super>Spy1.SLMethod</super><private>false</private><indexed-type>none</indexed-type><inst-vars>returnType argTypes receiverType executed literals numberOfExecutions </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-TypeCollector</category><attributes><package>SpyLite</package></attributes></class><comment><class-id>Spy1.SSTypeCollectorMethod</class-id><body>Missing comment</body></comment><class><name>SSTypeCollectorClass</name><environment>Spy1</environment><super>Spy1.SLClass</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-TypeCollector</category><attributes><package>SpyLite</package></attributes></class><comment><class-id>Spy1.SSTypeCollectorClass</class-id><body>Missing comment</body></comment><class><name>SpyWrapper</name><environment>Spy1</environment><super>Refactory.Wrappers.MethodWrapper</super><private>false</private><indexed-type>objects</indexed-type><inst-vars>count methodSpy previousMethod v originalMethod receiver listOfArguments </inst-vars><class-inst-vars>currentTestCase currentTestMethod </class-inst-vars><imports></imports><category>Spy-Core</category><attributes><package>SpyLite</package></attributes></class><comment><class-id>Spy1.SpyWrapper</class-id><body>Missing comment</body></comment><class><name>SLMethodCoverage</name><environment>Spy1</environment><super>Spy1.SLMethod</super><private>false</private><indexed-type>none</indexed-type><inst-vars>blocks probedMethod </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-Coverage</category><attributes><package>SpyLite</package></attributes></class><class><name>SLPackageCoverage</name><environment>Spy1</environment><super>Spy1.SLPackage</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-Coverage</category><attributes><package>SpyLite</package></attributes></class><class><name>SLBlock</name><environment>Spy1</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id executed numberOfStatements start stop code </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-Coverage</category><attributes><package>SpyLite</package></attributes></class><class><name>SLClassCoverage</name><environment>Spy1</environment><super>Spy1.SLClass</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-Coverage</category><attributes><package>SpyLite</package></attributes></class><class><name>SLProfiler</name><environment>Spy1</environment><super>Spy1.SpyLite</super><private>false</private><indexed-type>none</indexed-type><inst-vars>packages allClassesAsDictionaryCache allMethodsCache afterBlock </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Spy-Core</category><attributes><package>SpyLite</package></attributes></class><comment><class-id>Spy1.SLProfiler</class-id><body>Missing comment</body></comment><class><name>SSTypeCollector</name><environment>Spy1</environment><super>Spy1.SLProfiler</super><private>false</private><indexed-type>none</indexed-type><inst-vars>scalars </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-TypeCollector</category><attributes><package>SpyLite</package></attributes></class><comment><class-id>Spy1.SSTypeCollector</class-id><body>Missing comment</body></comment><class><name>SLProfilerCoverage</name><environment>Spy1</environment><super>Spy1.SLProfiler</super><private>false</private><indexed-type>none</indexed-type><inst-vars>typeInfo </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SpyLite-Coverage</category><attributes><package>SpyLite</package></attributes></class><shared-variable><name>Registry</name><environment>Spy1.SLProfiler</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>SpyLite</package></attributes></shared-variable><shared-variable><name>CurrentMethod</name><environment>Spy1.SpyWrapper</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>SpyLite</package></attributes></shared-variable><shared-variable><name>STypeInfo</name><environment>Spy1.SSTypeCollector</environment><private>false</private><constant>false</constant><category>As yet unclassified</category><attributes><package>SpyLite</package></attributes></shared-variable><methods><class-id>Spy1.SLMethod</class-id> <category>delegation</category><body package="SpyLite" selector="flushCache">flushCache	^ self</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>MethodWrapper</name><environment>Refactory.Wrappers</environment><super>Kernel.CompiledMethod</super><private>false</private><indexed-type>objects</indexed-type><inst-vars>clientMethod selector </inst-vars><class-inst-vars>methods </class-inst-vars><imports></imports><category>Refactory-Method Wrappers</category><attributes><package>Method Wrapper Base</package></attributes></class><class><name>CodeProbe</name><environment>CraftedSmalltalk</environment><super>CraftedSmalltalk.AbstractCodeProbe</super><private>false</private><indexed-type>none</indexed-type><inst-vars>testMethod testSource variables labelString permanent </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>CraftedSt-Probes</category><attributes><package>Debugger-Probes</package></attributes></class><class><name>RBProgramNodeVisitor</name><environment>Refactory.Browser</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Browser-Parse Tree Matching</category><attributes><package>Browser-Parser</package></attributes></class></st-source>